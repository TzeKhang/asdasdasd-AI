# RevenueMovies.py
import pandas as pd

class RevenueRecommender:
    def __init__(self, file_path):
        try:
            self.df = pd.read_csv(file_path)
        except FileNotFoundError:
            raise FileNotFoundError(f"❌ Could not find {file_path}.")
        
        if "title" not in self.df.columns or "revenue" not in self.df.columns:
            raise ValueError("❌ Dataset must contain 'title' and 'revenue' columns.")

        self.df = self.df[['title', 'revenue']].dropna()
        self.df = self.df[self.df['revenue'] > 0].reset_index(drop=True)

    def get_random_movies(self, n=20):
        """Return n random movies from dataset."""
        return self.df.sample(min(n, len(self.df))).reset_index(drop=True)

    def recommend_by_revenue(self, selected_title, tolerance=0.3, top_n=5):
        """Recommend movies within ±tolerance range of revenue."""
        if selected_title not in self.df['title'].values:
            return pd.DataFrame(), None

        selected_movie = self.df[self.df['title'] == selected_title].iloc[0]
        selected_revenue = selected_movie['revenue']

        lower = selected_revenue * (1 - tolerance)
        upper = selected_revenue * (1 + tolerance)

        recommendations = self.df[
            (self.df['revenue'] >= lower) &
            (self.df['revenue'] <= upper) &
            (self.df['title'] != selected_title)
        ]

        if recommendations.empty:
            return pd.DataFrame(), selected_revenue

        return recommendations.sample(min(top_n, len(recommendations))).reset_index(drop=True), selected_revenue
